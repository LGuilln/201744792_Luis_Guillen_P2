/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.frontend;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.backend.Lexico;
import com.backend.Validacion_T;


/**
 *
 * @author luedu
 */    
public class Analizador extends javax.swing.JFrame {
//mis atributos
    JFileChooser seleccionar = new JFileChooser();
    FileFilter filter = new FileNameExtensionFilter("Archivo de Texto (.txt)",".txt");
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    
    JFileChooser ArchivoLeer;
    File archivo1;
    String linea;
    String buscar;
    String b;

    String rn;
    char alamacen;
    int contadorPalabras;
    int numTokens;
    FileReader fr;
    BufferedReader entrada1;
    File leer;


    public static String [] base; //vector almacena
    public static String [] reconoce;
    public String Almacena;
    public int ConERROR;

    //variables para mandar
    String palabra;

    public int fil=0;
    public int colu=0;
    int No = 0;
    public int salto=0;

    public int fila1=0;
    public int columna1=0;
    public int[] Rfila;
    public int [] Rcolumna;

    public String [] Errores;



    //TextArea T_texto;

    char[] caracter = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n','ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N','Ñ', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'};


    String identificadores= "a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z";
    String numeros = "0,1,2,3,4,5,6,7,8,9";
    String operacionales ="+,-,*,/,^,**,//,++,--,^^";
    String [] agrupacion ={"(,),[,],{,}"};
    String [] relacionales= {"<,>,==,="};
    String [] signo= {",;"};
    
    String [] errores1;
    private Object data;
    String Copiar;

    
    /**
     * Creates new form Analizador
     */
    public Analizador() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    public String AbrirArchivo(File archivo){
        String docu = "";
        try {
            entrada= new FileInputStream(archivo);
            int ascci;
            while ((ascci=entrada.read()) !=-1) {                
                char caracter=(char)ascci;
                docu+=caracter;
            }
        } catch (Exception e) {
        }
        return docu;
    }
    
    public String GuardarArchivo(File archivo, String docu){
        String mensaje= null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt= docu.getBytes();
            salida.write(bytxt);
            mensaje="Archivo guardado";
        } catch (Exception e) {
        }
        return mensaje;
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBError = new javax.swing.JButton();
        jBClean = new javax.swing.JButton();
        jBOpen = new javax.swing.JButton();
        jBExport = new javax.swing.JButton();
        ButtonSalir = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();
        jBHome = new javax.swing.JButton();
        jBSave = new javax.swing.JButton();
        jTextArea2 = new java.awt.TextArea();
        jBAnalizar = new javax.swing.JButton();
        jName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/error.png"))); // NOI18N
        jBError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBErrorActionPerformed(evt);
            }
        });
        getContentPane().add(jBError, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 350, 70, -1));

        jBClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/clean.jpg"))); // NOI18N
        jBClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCleanActionPerformed(evt);
            }
        });
        getContentPane().add(jBClean, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 480, 70, 70));

        jBOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/open.png"))); // NOI18N
        jBOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOpenActionPerformed(evt);
            }
        });
        getContentPane().add(jBOpen, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 60, 60));

        jBExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/expor.png"))); // NOI18N
        jBExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExportActionPerformed(evt);
            }
        });
        getContentPane().add(jBExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 220, 70, 70));

        ButtonSalir.setBackground(new java.awt.Color(102, 255, 0));
        ButtonSalir.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        ButtonSalir.setText("Tabla");
        ButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 80, 30));

        jBExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit icon.png"))); // NOI18N
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });
        getContentPane().add(jBExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 640, 70, 70));

        jBHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/home.png"))); // NOI18N
        jBHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHomeActionPerformed(evt);
            }
        });
        getContentPane().add(jBHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 70, 70));

        jBSave.setBackground(new java.awt.Color(102, 255, 102));
        jBSave.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jBSave.setForeground(new java.awt.Color(255, 0, 51));
        jBSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        jBSave.setActionCommand("Ver Reportes");
        jBSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jBSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 60, 60));
        getContentPane().add(jTextArea2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 600, 500, 120));

        jBAnalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/analizar.png"))); // NOI18N
        jBAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnalizarActionPerformed(evt);
            }
        });
        getContentPane().add(jBAnalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 60, 60));

        jName.setBackground(new java.awt.Color(102, 255, 102));
        jName.setFont(new java.awt.Font("Arial Black", 0, 48)); // NOI18N
        jName.setForeground(new java.awt.Color(51, 255, 51));
        jName.setText("\"Analizador Léxico\"");
        jName.setAutoscrolls(true);
        getContentPane().add(jName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dubai Light", 0, 36)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 750, 390));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/WallpaperIz.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBErrorActionPerformed

        String ErrorDeToken= jTextArea1.getText();
        int contadorToken=0;
        String raiz2="";
        int numero=0;
        String[] Error1 = new String [1000000];
        String[] vacio = new String[1000000];
        int existe1=0;
        do{
            raiz2=""+ErrorDeToken.charAt(contadorToken);
            if (raiz2.equals("@")){
                System.out.println("existe un @");
                Error1[existe1]="@";
                existe1++;
            }else if(raiz2.equals("#")){
                Error1[existe1]="#";
                existe1++;
            }else{
                vacio[contadorToken]="";
            }
            contadorToken++;
        }while(contadorToken <ErrorDeToken.length());
        System.out.println("El existe1 tiene="+existe1);

        try{
            FileWriter fw = new FileWriter("Analizados/Error.html");
            fw.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />" + "\n"  + "\n");
            fw.write("<HTML><HEAD><TITLE>LENGUAJES FORMALES DE PROGRAMACIÓN</TITLE></HEAD>" + "\n" + "\n");
            fw.write("<H1><CENTER><B><FONT SIZE=\"9\" COLOR=\"BLACK\">LISTADO DE ERRORES" + "</FONT></B></H1>" + "\n" + "\n");
            fw.write("<HR>" + "\n" + "\n");
            fw.write("<BR><CENTER><TABLE BORDER=1>\n");
            fw.write("	<TR>\n");
            fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>No.</B></FONT></TD>\n");
            fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>Lexema</B></FONT></TD>\n");
            fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>Descripción</B></FONT></TD>\n");

            fw.write("	</TR>\n");
            String[] result = jTextArea1.getText().split("\\s");
            // Nodo registro = new Nodo();
            //registro = lista.getInicio();
            for(int so=0; so<existe1;so++){
                numero++;
                fw.write("	<TR>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"RED\">" + numero + "</FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + Error1[so] + "</FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Error Lexico"  + "</FONT></TD>\n");

                fw.write("	</TR>\n");

                //registro=registro.sig;
            }
            fw.write("</TABLE>" + "\n");
            fw.flush();
            fw.close();

        }catch(IOException er){
            System.out.println(er);
        }
         try {
            File path;
            path = new File ("C:\\Users\\luedu\\Desktop\\LEGR_P2\\Analizador Lexico\\Analizados\\Error.html");
            Desktop.getDesktop().open(path);
        }catch (IOException ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBErrorActionPerformed
/**
     * Botón de guardar mi txt
     * @param evt 
     */
    private void jBSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveActionPerformed
        if (seleccionar.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION) {
            archivo=seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("txt")) {
                String Documento= jTextArea1.getText();
                String mensaje = GuardarArchivo(archivo, Documento);
                if (mensaje!=null) {
                    JOptionPane.showMessageDialog(null, mensaje);
                    
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Archivo No Compatible");
                    
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "Guardar Documento de texto");
            }
        }      
        // TODO add your handling code here:
    }//GEN-LAST:event_jBSaveActionPerformed

     /**
     * Botón para Limpiar area de Texto
     * @param evt 
     */
    private void jBCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCleanActionPerformed
        jTextArea1.setText(""); 
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCleanActionPerformed
 /**
     * Método para abrir un archivo de Texto
     * @param evt 
     */
    
    private void jBOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOpenActionPerformed

        if (seleccionar.showDialog(null, "Abrir")==JFileChooser.APPROVE_OPTION) {
            FileFilter filter = new FileNameExtensionFilter("Archivo de Texto (.txt)",".txt");
            archivo=seleccionar.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("txt")) {
                String documento = AbrirArchivo(archivo);
                jTextArea1.setText(documento);               
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no disponible");
            }
            }
        }
          // TODO add your handling code here:
    }//GEN-LAST:event_jBOpenActionPerformed

    /**
     * Método para exportar tabla
     * @param evt 
     */
    
    private void jBExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExportActionPerformed
        int numero=0;
        if (ConERROR<1){

            String b = jTextArea1.getText();
            base = jTextArea1.getText().split("\\s");
            //String[] o=base;
            String L="";

            try{
                FileWriter fw = new FileWriter("Analizados/Tokens.html");
                fw.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />" + "\n"  + "\n");
                fw.write("<HTML><HEAD><TITLE>LENGUAJES FORMALES DE PROGRAMACIÓN</TITLE></HEAD>" + "\n" + "\n");
                fw.write("<H1><CENTER><B><FONT SIZE=\"9\" COLOR=\"BLUE\">LISTADO DE TOKEN'S</FONT></B><BR></H1>" + "\n" + "\n");
                fw.write("<HR>" + "\n" + "\n");
                fw.write("<BR><CENTER><TABLE BORDER=1>\n");
                fw.write("	<TR>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>TOKEN</B></FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>DESCRIPCIÓN</B></FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>LEXEMA</B></FONT></TD>\n");

                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>FILA</B></FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>COLUMNA</B></FONT></TD>\n");
                fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLACK\"><B>CÁRACTERES</B></FONT></TD>\n");
                fw.write("	</TR>\n");

                for (int i=0; i<base.length;i++){
                    numero++;

                    fw.write("	<TR>\n");
                    fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"RED\">" + numero + "</FONT></TD>\n");
                    fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + base[i] + "</FONT></TD>\n");

                    if (base[i].equals("*") | base[i].equals("+")| base[i].equals("/")| base[i].equals("-") ){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Operacional" + "</FONT></TD>\n");

                    }else if (base[i].equals("(") | base[i].equals(")") | base[i].equals("[") | base[i].equals("]") | base[i].equals("{") | base[i].equals("}")){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Agrupación" + "</FONT></TD>\n");

                    }else if (base[i].equals("<") | base[i].equals(">") | base[i].equals("==") | base[i].equals("=")){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Relacionales" + "</FONT></TD>\n");

                    }else if (base[i].equals("")){
                        colu++;
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Espacio" + "</FONT></TD>\n");

                    }else if (base[i].equals(",") | base[i].equals(":") | base[i].equals(";") | base[i].equals(".")){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Signo" + "</FONT></TD>\n");

                    }else if (base[i].equals("0") | base[i].equals("1") | base[i].equals("2") | base[i].equals("3") | base[i].equals("4") | base[i].equals("5") | base[i].equals("6") | base[i].equals("7") | base[i].equals("8") | base[i].equals("9")   ){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Número" + "</FONT></TD>\n");

                    }else if (base[i].equals(identificadores)){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Palabras" + "</FONT></TD>\n");

                    } else if(base[i].equals("\n") ){
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "Salto de linea" + "</FONT></TD>\n");
                        colu=0;
                        fil++;

                    }else{
                        fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + "ID" + "</FONT></TD>\n");
                    }

                    fw.write("<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + fil + "</FONT></TD>\n");

                    fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + colu + "</FONT></TD>\n");

                    //   separa las palabras y cuenta las veces que aparece.
                    String t = base[i];
                    String [] pala = t.split("");
                    int canti = pala.length;

                    fw.write("	<TD ALIGN=\"CENTER\"><FONT COLOR=\"BLUE\">" + canti + "</FONT></TD>\n");
                    fw.write("	</TR>\n");

                }
                //   }
            fw.write("</TABLE>" + "\n");
            fw.flush();
            fw.close();

        }catch(IOException er){
            System.out.println(er);
        }
        try {
            File path;
            path = new File ("C:\\Users\\luedu\\Desktop\\LEGR_P2\\Analizador Lexico\\Analizados\\Tokens.html");
            Desktop.getDesktop().open(path);
        }catch (IOException ex) {
        }

        }else{
            JOptionPane.showMessageDialog(null, "Su analisis tiene algun error, No se puede Realizar el Archivo de Tokens");
            //Codigo de analizador por la izquierda}
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExportActionPerformed
/**
     * Salir de la Aplicación
     * @param evt 
     */
    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        System.exit(0);
     // TODO add your handling code here:
    }//GEN-LAST:event_jBExitActionPerformed
/**
     * Ir a Home
     * @param evt 
     */
    private void jBHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHomeActionPerformed
        this.setVisible(false);
        new Bienvenida().setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jBHomeActionPerformed

    /**
     * Método para analizar
     * @param evt 
     */
    private void jBAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnalizarActionPerformed
      String almacenA = jTextArea1.getText();   
        String L="";
        int ConOperacional=0;
        int ConAgrupacion=0;
        int ConRelacionales =0;
        int ConLetra=0;
        int ConNumero=0;
       
        ConERROR=0;
        
       for(int j=0;j<=almacenA.length()-1;j++){
             L=""+almacenA.charAt(j);            
             
              if (L.equals("+") | L.equals("-")| L.equals("*")| L.equals("/")| L .equals("^")| L .equals("**")|  L.equals("//")| L.equals("^^") ){
                          
                          ConOperacional++;
                          System.out.println("Operacional" +" * "+ConOperacional);
                          
                      }else if ((L.equals("(") | L.equals(")") | L.equals("[") | L.equals("]") | L.equals(":") || L.equals(";") |  L.equals(",") | L.equals(";") | L.equals(":") | L.equals("."))) {
                          
                           ConAgrupacion++;
                           System.out.println("Agrupación " + " * "+ConAgrupacion);
                      
                      }else if ((L.equals("<") | L.equals(">") | L.equals("==") | (L.equals("=")))) {
                       
                           ConRelacionales++;
                           System.out.println("Relacional"+ " * "+ConRelacionales);
                      
                      }else if ((L.equals("@") )){
                          //jtA.setText("@" + "\n");
                         rn="@";
                          
                          ConERROR++;
                           System.out.println("ERROR"+" * "+ConERROR);
                             
                      }else if ((L.equals("#") )){
                          //jtA.setText("@" + "\n");
                          rn="#";
                          
                          ConERROR++;
                           System.out.println("ERROR"+" * "+ConERROR);     
              }else if ((L.equals("0") |L.equals("1") | L.equals("2") | L.equals("3") | L.equals("4") | L.equals("5") | L.equals("6") | L.equals("7")  | L.equals("8") | L.equals("9")   )){
                 
                   ConNumero++;
                   System.out.println("Número "+" * "+ConLetra);
              
              }else if (L.equals(identificadores)){
                  ConLetra++;
                  System.out.println("Letra"+" * "+ConLetra);
              }else if (L.equals("\n")){
                  fila1++;
                  columna1=0;
              }else if (L.equals(" ")){
                  columna1++;
                  System.out.println("COLUMNA: " + columna1 );
              }else{
                  System.out.println("ID");
              }       
        }
      System.out.println("Operacionales: "+ ConOperacional + " Relacionales: " + ConOperacional + " Agrupación: "+ ConAgrupacion+ " Errores:" + ConERROR );   
        // TODO add your handling code here:
    }//GEN-LAST:event_jBAnalizarActionPerformed
/**
     * Método para mostrar la tabla
     * @param evt 
     */
    private void ButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSalirActionPerformed
      this.setVisible(false);
      new Diagrama().setVisible(true);        
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analizador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonSalir;
    private javax.swing.JButton jBAnalizar;
    private javax.swing.JButton jBClean;
    private javax.swing.JButton jBError;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBExport;
    private javax.swing.JButton jBHome;
    private javax.swing.JButton jBOpen;
    private javax.swing.JButton jBSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    public java.awt.TextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}